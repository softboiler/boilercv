# Run static analysis, tests, and sync
name: "ci"
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: True
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: ["main"]
defaults:
  run:
    shell: "pwsh"
jobs:
  sync:
    runs-on: "ubuntu-24.04"
    steps:
      - uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938" # v4.2.0
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@c9aa747934b6867b18bf8f6624a8929c4f76147b" # v3.1.4
        with:
          version: "0.4.15"
          enable-cache: true
      - run: "./Invoke-Uv.ps1"
      - uses: "actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874" # v4.4.0
        with:
          name: "lock"
          path: |
            uv.lock
            requirements
  build-docs:
    runs-on: "ubuntu-24.04"
    steps:
      - uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938" # v4.2.0
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@c9aa747934b6867b18bf8f6624a8929c4f76147b" # v3.1.4
        with:
          version: "0.4.15"
          enable-cache: true
      - run: "./Invoke-Uv.ps1 sphinx-build -EaT docs _site"
      - uses: "actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa" # v3.0.1
  deploy-docs:
    if: github.event_name != 'pull_request'
    needs: "build-docs"
    permissions:
      pages: "write"
      id-token: "write"
    environment:
      name: "github-pages"
      url: "${{ steps.deployment.outputs.page_url }}"
    runs-on: "ubuntu-24.04"
    steps:
      - id: "deployment"
        uses: "actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e" # v4.0.5
  ruff:
    runs-on: "ubuntu-24.04"
    steps:
      - uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938" # v4.2.0
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@c9aa747934b6867b18bf8f6624a8929c4f76147b" # v3.1.4
        with:
          version: "0.4.15"
          enable-cache: true
      - run: "./Invoke-Uv.ps1 ruff check --no-fix --output-format github ."
  fawltydeps:
    runs-on: "ubuntu-24.04"
    steps:
      - uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938" # v4.2.0
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@c9aa747934b6867b18bf8f6624a8929c4f76147b" # v3.1.4
        with:
          version: "0.4.15"
          enable-cache: true
      - run: ". ./dev.ps1 && iuv pre-commit run fawltydeps-src && iuv pre-commit run fawltydeps-dev"
  pyright:
    runs-on: "ubuntu-24.04"
    steps:
      - uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938" # v4.2.0
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@c9aa747934b6867b18bf8f6624a8929c4f76147b" # v3.1.4
        with:
          version: "0.4.15"
          enable-cache: true
      - run: "./Invoke-Uv.ps1"
      - uses: "jakebailey/pyright-action@b5d50e5cde6547546a5c4ac92e416a8c2c1a1dfe" # v2.3.2
        with:
          pylance-version: "${{ env.PYRIGHT_PYTHON_PYLANCE_VERSION }}"
  test:
    strategy:
      matrix:
        runner:
          - "macos-14"
          - "ubuntu-22.04"
          - "windows-2022"
        python:
          - "3.11"
          - "3.12"
    runs-on: "${{ matrix.runner }}"
    steps:
      # ! https://askubuntu.com/questions/900285/libegl-so-1-is-not-a-symbolic-link
      - if: startsWith(matrix.runner, 'ubuntu')
        name: "Install PySide6 system dependencies"
        run: "sudo apt update && sudo apt install libegl1-mesa-dev"
      - uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938" # v4.2.0
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@c9aa747934b6867b18bf8f6624a8929c4f76147b" # v3.1.4
        with:
          version: "0.4.15"
          enable-cache: true
      # ! https://github.com/pytest-dev/pytest-cov/issues/479#issuecomment-1247444988
      - if: startsWith(matrix.runner, 'ubuntu') && matrix.python == '3.11'
        run: "./Invoke-Uv.ps1 pytest --cov --cov-config=pyproject.toml --cov-report=xml"
      - if: startsWith(matrix.runner, 'ubuntu') && matrix.python == '3.11'
        uses: "codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238" # v4.6.0
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
      - if: (!(startsWith(matrix.runner, 'ubuntu') && matrix.python == '3.11'))
        run: "./Invoke-Uv.ps1 -PythonVersion '${{ matrix.python }}' pytest"
